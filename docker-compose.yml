version: '3.8'

networks:
  kafka-network:
    driver: bridge

services:
  postgres-service:
    image: 'postgres:latest'
    container_name: postgres-service
    hostname: postgres-service
    networks:
      - kafka-network
    ports:
      - 5432:5432/tcp
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  kafka-service:
    image: 'bitnami/kafka:latest'
    container_name: kafka-service
    hostname: kafka-service
    networks:
      - kafka-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-service:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-service:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    
    healthcheck:
      test: ["CMD", "/usr/local/bin/kafka-broker-check"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-app:
    image: notification-app:latest
    build:
      context: .
    container_name: notification-app
    hostname: notification-app
    ports:
      - 8083:8083/tcp
    environment:
      - KAFKA_BROKERS=kafka-service:9092
      - KAFKA_TOPIC=notifications
      - KAFKA_BOOTSTRAP_SERVERS=kafka-service:9092
      - KAFKA_CONSUMER_GROUP=notification-app-group
      - POSTGRES_DATABASE_DSN=host=postgres-service user=root password=postgres dbname=notifications_db port=5432 sslmode=disable TimeZone=Asia/Kolkata
    depends_on:
      - kafka-service
      - postgres-service
        
    networks:
      - kafka-network
    restart: unless-stopped

volumes:
  kafka_data:
    external: true
  postgres_data:
    external: true